## Website for InstraCore: Institute Management System.
| Since there are multiple user roles and no registration form (only login in *index*), need to design a _login page_ and then _role-based dashboards_ and sections.

### User Roles:
```sudo
User Roles: Admin, Employee, User/Customar

Sub User Roles:
	Admin = Admin,
	Employee = Faculty, HR, Finance, Marketing, IT, Teacher, Others #The "Others" role in Employee list is basically a catch-all category â€” (e.g., librarian, security guard, maintenance worker, guest lecturer, etc.)
	User/Customar = Student
```

### Dashboard based on Roles:

> All User can edit there own profile [image, name, bio, date_of_birth, phone, email, gender, location, country, Social Links eg. facebook, twitter, instagram, linkedin]

#### Admin Dashboard:

	Sections:
	Summary: total students (active, inactive), total teachers (active, inactive), total courses (active, inactive), total staff (active, inactive)
	Course overview: active and inactive courses
	Attendance list: student, teacher, staff attendance (with bar charts)
	Events details
	Notice board
	Accounts details: total earning, total expense, total fees collection, students who haven't paid

> On Dashboard, view all kind of summary like total (current/old) - employee, students, courses, Accounts-Balances or like this.
> From Dashboard, Admin can even view individual items and if need then *download* that.

#### Faculty Dashboard:

> On Dashboard, view all kind of summary like total (current/old) - teacher, students, courses, etc.
> From Dashboard, Faculty can even view individual items and if need then *download* that. (student/courses related)
> Add offline based course from add section, [time, description, what to do, price etc fact]
> Offline based course need to assign one or many teacher
> Course have close option
> List for accept or redirect that course are close or not [based on teacher requirement]

#### HR Dashboard:

> On Dashboard, view all kind of summary like total (current/old) - Employee [with out Admin]
> On Dashboard, view all applied jobs and call for an interview
> From Dashboard, HR can even view individual items and if need then *download* that. (Employee related)

#### Finance Dashboard:

> On Dashboard, view all kind of summary like total (current/old) - Admin, Employee selary, Spends, and other all kind of info about tranjections
> On Dashboard, view all offered selary on list and have accepted or redirect button
> From Dashboard, Finance can even view individual expenses and goods (money related) and if need then *download* that.

#### Teacher Dashboard:

	Daily class routine
	Full month attendance summary
	Lesson plan

###### Type1: * Online *
> Add online based course from add section, [time, description, what to do, price etc fact]
> view there own course
> Course have expire option

###### Type2: * Offline * [Regular and Diploma]
> view there accepted courses
> Can call gardian meaning [Send link on gardian email/phone]

#### Student Dashboard:

	Student attendance
	Daily classes list
	Schedules
	Student performance bar
	Exam results
	Leave status
	Fees reminder
	Notice board
	Syllabus
	Certificate section

> View available All Types of course
> can buy course from all course list (Online course)
> Register *Regular* and *Diploma* course as well [for Regular, only one on a single time]
> View there all completed course and certificate on another section

### Permission:

#### Admin:

> Admin can create, edit [username and password], delete any kind of employee [even another Admin too]. (Do not need any permission, Just notify on _Finance_ for selary part)
> Need to approve after HR's accepted jobs

#### Faculty:

> Faculty can not open there own account (admin create it)
> Thay can create, edit [username and password], delete _Student_

#### HR:

> HR can make job post for Employees
> HR can offer selary over job post [but need Finance accepted or not]

#### Finance:

> Need parmition for selary accepted (HR job posts [for HR] and course price [from Teacher])
> Need to calculate all Finance related costs.

#### Teacher:

###### Type1: * Online *
> Save sales and get money info before delete or expire course
> Actions on course [CRUD]

###### Type2: * Offline * [Regular and Diploma]
> Accept course that adds assignments to it or reject that
> can start class and make assessment on there course related Students
> Can close this course [need Faculty parmition]

#### Student:

> view all regular, diploma and online course (from there registration)
	>> If done and pass on online exam then get *certificate* [for online]
	>> If done and pass on offline exam then apply for *certificate* [for offline (Regular and Diploma)]
> certificate save another model, that can not modify anyone [with out Admin, Admin can DELETE it]
> Send all money, course registration, results related info on gardian mail [every actions], send monthly report on gardian mail

### Instructions for django ~mastering~:

- Project name is InstraCore
- Have individual app for `AuthApp`, `AdminApp`, `EmployeeApp`, `StudentApp`
	- `EmployeeApp handel all employee related dashboards and actions`,
	- `All app have there own individual model, view, urls and actions`
- Have a index page for not authenticated user, if authenticated then can't show it, then index = there own dashboard
- index page have Log In, sign Up Button, all public summary on Institute, students and parents comments, about, contact atc on a single page
- If login then redirect there own dashboard
- All feature according to requirement [dashboard]
- Have a static common footer [year use from js] for every page
- Have a dinamic nav bar according to user (if else parmition on django)
- Nav bar have profile icon, if drag on icon then show view profile, student have panding cost, teacher have upcomming class, and all other user have like as well, logout option
- Have a master.html page on AuthApp that cantain all related css, nav, block body, footer etc
- Need all css on static file and all app have there own css and js [js if need]
- All app need there own templates folder and all django (.html) file on there own apps templates folder

### Basic note:

> Some Employee Group and User/Customar Group have a Choice field for Sub Category, eg.:
	`Student = Regular [for Regular class], Online [Buy Course, complete and get certificate from online], Diploma [for short course]`,
	`Teacher = Subject based (math, biology, website with python, HTML CSS short course, etc) [Regular and diploma], Course [online based]`,
> If any one delete any account, then delete all but need to download there data [selary, expanse, due, certificate, etc (role based)] and save it on system (trash type model)
> Any member can update there own profile
> After Login on first time, need to change password (if have default password then show it)
> All Employee must have a section for selary
> Need Monthly expanse sheet so, need a expanse (maybe a Django Model) controller
> Need to manage student fee collection and other option to get there expanse.
> Need to prepare monthly expanse sheet for every employee [_Admin_ and _Finance_ can view summary on dashboard]
> use Bootstrap for styling
> All actions [CRUD] are saved on a separate model
> All actions send on Admin or role based dashboard as notifications
> Manage notifications using this separate model

### Models.py: